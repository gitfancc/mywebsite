$(function(){
	var pathnameStr = window.location.protocol+"//"+window.location.host+"/index";
	$.post(cxtPath+"/user/sport/sport",{'watchId':watchId},function(results){
		$("#searchDate").val(results.searchDate);
		showDate(results.searchDate, results.latelyTime);
		initLoad(results.paramSportResults);
		initLoadHearRate(results.paramSportResults);
		/*$("#speed").text(speedTotal);
		$("#heartRate").text(heartRateTotal); 
		$("#stepCount").text(stepsTotal);
		$("#calories").text(calTotal);
		$("#distance").text(distanceTotal);*/
		var aveVal = avgValue(stepsTotal);
		$("#avgValue1").text(aveVal);
		if(myledong=='myledong'){
			$("#progressbar").progressbar({value: parseInt(aveVal.substring(0,aveVal.indexOf("%")))});
			$(".ui-poptip .ui-poptip-close").click(function(){
				$(this).parents(".ui-poptip").animate({ opacity: 'hide' }, "slow");
			}); 
			load(stepsTotal,speedTotal,calTotal,distanceTotal,heartRateTotal);
		}
		jiathis_config = {
			  url:pathnameStr,
		      title:"",
		      summary:"今天的运动步数是"+stepsTotal+"步，约"+distanceTotal+"米，平均速度"+speedTotal+"千米/小时，消耗卡路里"+calTotal+"千卡，已击败全国"+avgValue(stepsTotal)+"用户！"
		}
	},'json');
	
	
	$("#previous").click(function(){
		$.post(cxtPath+"/user/sport/previous",{'watchId':watchId,"searchDate":$("#searchDate").val()},function(results){
			$("#searchDate").val(results.searchDate);
			showDate(results.searchDate,  results.latelyTime);
			initLoad(results.paramSportResults);
			initLoadHearRate(results.paramSportResults);
			/*$("#speed").text(speedTotal);
			$("#heartRate").text(heartRateTotal);
			$("#stepCount").text(stepsTotal);
			$("#calories").text(calTotal);
			$("#distance").text(distanceTotal);*/
			var aveVal = avgValue(stepsTotal);
			$("#avgValue1").text(aveVal);
			$("#progressbar").progressbar({value: parseInt(aveVal.substring(0,aveVal.indexOf("%")))});
			
			stepsTotal = subStr(stepsTotal+"");
			speedTotal = subStr(speedTotal>"0"?speedTotal+"":"0");
			heartRateTotal = subStr(heartRateTotal>"0"?heartRateTotal+"":"0");
			distanceTotal = subStr(distanceTotal+"");
			calTotal = subStr(calTotal+"");
			
			
			a.refresh(stepsTotal);
			b.refresh(speedTotal);
			c.refresh(heartRateTotal);
			d.refresh(calTotal);
			e.refresh(distanceTotal);
			jiathis_config = {
				  url:pathnameStr,
			      title:"",
			      summary:"今天的运动步数是"+stepsTotal+"步，约"+distanceTotal+"米，平均速度"+speedTotal+"千米/小时，消耗卡路里"+calTotal+"千卡，已击败全国"+avgValue(stepsTotal)+"用户！"
			}
		},'json');
	})
	
	
	$("#next").click(function(){
		$.post(cxtPath+"/user/sport/next",{'watchId':watchId,"searchDate":$("#searchDate").val()},function(results){
			$("#searchDate").val(results.searchDate);
			showDate(results.searchDate,  results.latelyTime);
			initLoad(results.paramSportResults);
			initLoadHearRate(results.paramSportResults);
			/*$("#speed").text(speedTotal);
			$("#heartRate").text(heartRateTotal);
			$("#stepCount").text(stepsTotal);
			$("#calories").text(calTotal);
			$("#distance").text(distanceTotal);*/
			var aveVal = avgValue(stepsTotal);
			$("#avgValue1").text(aveVal);
			$("#progressbar").progressbar({value: parseInt(aveVal.substring(0,aveVal.indexOf("%")))});
			a.value = stepsTotal;
			
			stepsTotal = subStr(stepsTotal+"");
			speedTotal = subStr(speedTotal>"0"?speedTotal+"":"0");
			heartRateTotal = subStr(heartRateTotal>"0"?heartRateTotal+"":"0");
			distanceTotal = subStr(distanceTotal+"");
			calTotal = subStr(calTotal+"");
			
			
			a.refresh(stepsTotal);
			b.refresh(speedTotal);
			c.refresh(heartRateTotal);
			d.refresh(calTotal);
			e.refresh(distanceTotal);
			jiathis_config = {
				  url:pathnameStr,
			      title:"",
			      summary:"今天的运动步数是"+stepsTotal+"步，约"+distanceTotal+"米，平均速度"+speedTotal+"千米/小时，消耗卡路里"+calTotal+"千卡，已击败全国"+avgValue(stepsTotal)+"用户！"
			}
		},'json');
	})
	
	$("#chinaDate").change(function(){
		var newDate = $("#chinaDate").val();
		$.post(cxtPath+"/user/sport/previous",{'watchId':watchId,"searchDate":newDate,'current':'current'},function(results){
			showDate(newDate,  results.latelyTime);
			initLoad(results.paramSportResults);
			initLoadHearRate(results.paramSportResults);
			var aveVal = avgValue(stepsTotal);
			$("#avgValue1").text(aveVal);
			$("#progressbar").progressbar({value: parseInt(aveVal.substring(0,aveVal.indexOf("%")))});
			
			stepsTotal = subStr(stepsTotal+"");
			speedTotal = subStr(speedTotal>"0"?speedTotal+"":"0");
			heartRateTotal = subStr(heartRateTotal>"0"?heartRateTotal+"":"0");
			distanceTotal = subStr(distanceTotal+"");
			calTotal = subStr(calTotal+"");
			
			
			a.refresh(stepsTotal);
			b.refresh(speedTotal);
			c.refresh(heartRateTotal);
			d.refresh(calTotal);
			e.refresh(distanceTotal);
			jiathis_config = {
				  url:pathnameStr,
			      title:"",
			      summary:"今天的运动步数是"+stepsTotal+"步，约"+distanceTotal+"米，平均速度"+speedTotal+"千米/小时，消耗卡路里"+calTotal+"千卡，已击败全国"+avgValue(stepsTotal)+"用户！"
			}
		},'json');
	})
})

showDate = function(searchDate,  latelyTime){
	var currentDate = new Date();
	var newCurrentDate = (currentDate.getFullYear()+"-"+(currentDate.getMonth()+1)+"-"+currentDate.getDate()).replace(/-/g,"/");
	var newSearchDate = searchDate.replace(/-/g,"/");
	if(Date.parse(newCurrentDate)-Date.parse(newSearchDate)==0){
		$("#next").attr("class","btn-arrowr trans-zero");
		$("#chinaDate").val(" 今 天 ");
		if (latelyTime != ""){
			$("#currentDate").text( latelyTime + "  前更新");
		}else{
			$("#currentDate").text(searchDate.substring(5,7)+"月"+searchDate.substring(8,10)+"日");
		}
	}else if(Date.parse(newCurrentDate)-Date.parse(newSearchDate)>0){
		$("#next").attr("class","btn-arrowr trans-100");
		if(Date.parse(newCurrentDate)-Date.parse(newSearchDate)==86400000){
			$("#chinaDate").val(" 昨 天 ");
			if (latelyTime != ""){
				$("#currentDate").text( latelyTime + "  前更新");
			}else{
				$("#currentDate").text(searchDate.substring(5,7)+"月"+searchDate.substring(8,10)+"日");
			}
		}else{
			$("#chinaDate").val(" "+searchDate+" ");
			//$("#currentDate").text(" ").append("<span> 16:40 更新  </span>");
			if (latelyTime != ""){
				$("#currentDate").text( latelyTime + "  前更新");
			}else{
				$("#currentDate").text(searchDate.substring(5,7)+"月"+searchDate.substring(8,10)+"日");
			}
		}
	}else if(Date.parse(newCurrentDate)-Date.parse(newSearchDate)<0){
		$("#next").attr("class","btn-arrowr trans-zero");
	}
	
	$.post(cxtPath+'/sleepInfo/sleepInfoAction!getSleepRecord',{'time':newSearchDate},function(data){
		var j = data.data;
		$(".J_chartWrap").empty();
		if(j.length!=0){
			$("#main_sleep").removeClass("nodata");
			$("#main_sleep").addClass(".J_chartWrap");
			var chart = new ChartSleep($('.J_chartWrap'), j, {
				'chartWidth' : 470,
				'chartHeight' : 210,  //深度睡眠的高度，最好为3的倍数
				'colors' : ['#3266cb', '#99cdff', '#ffcb98','#ffcb98'],  //熟睡，浅睡，清醒
				'txt' : ['深度睡眠', '浅睡', '清醒','清醒']
			});
			
				var lightDuration=0;
				var awakeDuration=0;
				var deepDuration=0;
				var sleepDuration=0;
				var awakeCount=0;
				var totalsleep=0;
				var totalDuration=0;
				var differMinutes=0;
				var quality=0;
				var totalquality =0;
				for(var i=0;i<j.length;i++){
					
					lightDuration+=j[i].lightDuration;
					
					awakeDuration+=j[i].awakeDuration;
					
					deepDuration+=j[i].deepDuration;
					
					sleepDuration+=j[i].sleepDuration;
					
					awakeCount+=j[i].awakeCount;
					
					totalDuration+=j[i].totalDuration;
					
					totalsleep =lightDuration+deepDuration;
					
					quality+=j[i].quality*(j[i].lightDuration+j[i].deepDuration);
//					alert(quality)
					totalquality = quality/(lightDuration+deepDuration).toFixed(2);
				}
				
				$("#lightDuration").text(lightDuration/60>>0);
				$("#lightDuration_2").text(lightDuration%60);
				$("#deepDuration").text(deepDuration/60>>0);
				$("#deepDuration_2").text(deepDuration%60);
				$("#awakeDuration").text(awakeDuration);
				$("#awakeCount").text(awakeCount);
				$("#sleepDuration").text(sleepDuration);
				$("#totalDuration").text(totalDuration/60>>0);
				$("#totalDuration_2").text(totalDuration%60);
				$("#totalsleep").text(totalsleep/60>>0);
				$("#totalsleep_2").text(totalsleep%60);
				
				$("#star_sleep").removeClass();
				if(totalquality<=30 || isNaN(totalquality)){
					$("#starbox").attr("title","睡眠质量差!");
				}else if(totalquality>30 && totalquality<=60){
					$("#star_sleep").addClass('star one');
					$("#starbox").attr("title","睡眠质量中等!");
				}else if(totalquality>60 && totalquality<=85){
					$("#star_sleep").addClass('star two');
					$("#starbox").attr("title","睡眠质量良好!");
				}else if(totalquality>85 && totalquality<=100){
					$("#star_sleep").addClass('star three');
					$("#starbox").attr("title","睡眠质量非常好!");
				}
		}else{
				$("#main_sleep").addClass("nodata");
				$("#lightDuration").text(0);
				$("#lightDuration_2").text(0);
				$("#awakeDuration").text(0);
				$("#deepDuration").text(0);
				$("#deepDuration_2").text(0);
				$("#sleepDuration").text(0);
				$("#awakeCount").text(0);
				$("#totalDuration").text(0);
				$("#totalDuration_2").text(0);
				$("#totalsleep").text(0);
				$("#totalsleep_2").text(0);
				$("#goalpercent").text('');
				$("#main_sleep").html('');
				$("#star_sleep").removeClass();
		}
	}, 'json');
	
	
	
		/*$.get(cxtPath+'/sleepInfo/sleepInfoAction!getSleepRecord',{'time':newSearchDate},function(data){
			console.info(data.data)
			$("#main_sleep").empty();
			var j = data.data;
			if(j.length==0){
				$("#lightDuration").text(0);
				$("#lightDuration_2").text(0);
				$("#awakeDuration").text(0);
				$("#deepDuration").text(0);
				$("#deepDuration_2").text(0);
				$("#sleepDuration").text(0);
				$("#awakeCount").text(0);
				$("#totalDuration").text(0);
				$("#totalDuration_2").text(0);
				$("#totalsleep").text(0);
				$("#totalsleep_2").text(0);
				$("#goalpercent").text('');
				$("#main_sleep").html('');
				$("#star_sleep").removeClass();
			}else{
				var lightDuration=0;
				var awakeDuration=0;
				var deepDuration=0;
				var sleepDuration=0;
				var awakeCount=0;
				var totalsleep=0;
				var totalDuration=0;
				var differMinutes=0;
				var quality=0;
				var totalquality =0;
				for(var i=0;i<j.length;i++){
					if(j.length==1){
						$("#start_time").text((j[j.length-1].startTime).substring(10,16));
						$("#end_time").text((j[j.length-1].endTime).substring(10,16));
					}else if(j.length>1){
						$("#start_time").text((j[0].startTime).substring(10,16));
						$("#end_time").text((j[j.length-1].endTime).substring(10,16));
					}
					
					
					var totalX = (480/j.length).toFixed(2);//总宽度分配给每段睡眠的宽度
					var x = (totalX/j[i].differMinutes).toFixed(2);
					var details = j[i].details;
					if(details.length!=0){
						for(var k=0;k<details.length;k++){
							if(details[k].status==2){
								$("#main_sleep").append("<div class='awake' title='清醒' style='width:"+details[k].diffmunites*x+"px'></div>");
							}else if(details[k].status==16){
								$("#main_sleep").append("<div class='awake' title='清醒' style='width:"+details[k].diffmunites*x+"px'></div>");
							}else if(details[k].status==3){
								$("#main_sleep").append("<div class='awake' title='清醒' style='width:"+details[k].diffmunites*x+"px'></div>");
							}else if(details[k].status==0){
								$("#main_sleep").append("<div class='deepSleep' title='深睡' style='width:"+details[k].diffmunites*x+"px'></div>");
							}else if(details[k].status==1){
								$("#main_sleep").append("<div class='lightSleep' title='浅睡'  style='width:"+details[k].diffmunites*x+"px'></div>");
							}else if(details[k].status==17){
								$("#main_sleep").append("<div class='lightSleep' title='浅睡' style='width:"+details[k].diffmunites*x+"px'></div>");
							}
						}
					}
					
					
					lightDuration+=j[i].lightDuration;
//					console.info(lightDuration)
					
					awakeDuration+=j[i].awakeDuration;
					
					deepDuration+=j[i].deepDuration;
					
					sleepDuration+=j[i].sleepDuration;
					
					awakeCount+=j[i].awakeCount;
					
					
					totalDuration+=j[i].totalDuration;
					
					totalsleep =lightDuration+deepDuration;
					
					differMinutes+=j[i].differMinutes;
					
					quality+=j[i].quality*(j[i].lightDuration+j[i].deepDuration);
//					alert(quality)
					totalquality = quality/(lightDuration+deepDuration).toFixed(2);
//					console.info(isNaN(totalquality))
//					$("#lightDuration").text(j[i].lightDuration/60>>0);
//					$("#lightDuration_2").text(j[i].lightDuration%60);
//					$("#awakeDuration").text(j[i].awakeDuration);
//					$("#deepDuration").text(j[i].deepDuration/60>>0);
//					$("#deepDuration_2").text(j[i].deepDuration%60);
//					$("#sleepDuration").text(j[i].sleepDuration);
//					$("#awakeCount").text(j[i].awakeCount);
//					$("#totalDuration").text(j[i].totalDuration/60>>0);
//					$("#totalDuration_2").text(j[i].totalDuration%60);
//					
////					var total = j[i].lightDuration + j[i].deepDuration;
//					$("#totalsleep").text(total/60>>0);
//					$("#totalsleep_2").text(total%60);
//					var percent=(total/j[i].totalDuration).toFixed(2)*100;
//					$("#goalpercent").text(percent+"%");
				}
				
				$("#lightDuration").text(lightDuration/60>>0);
				$("#lightDuration_2").text(lightDuration%60);
				$("#deepDuration").text(deepDuration/60>>0);
				$("#deepDuration_2").text(deepDuration%60);
				$("#awakeDuration").text(awakeDuration);
				$("#awakeCount").text(awakeCount);
				$("#sleepDuration").text(sleepDuration);
				$("#totalDuration").text(totalDuration/60>>0);
				$("#totalDuration_2").text(totalDuration%60);
				$("#totalsleep").text(totalsleep/60>>0);
				$("#totalsleep_2").text(totalsleep%60);
				
				if(totalquality<30 || isNaN(totalquality)){
					$("#star_sleep").removeClass();
					$("#starbox").attr("title","睡眠质量差!");
				}else if(totalquality>30 && totalquality<60){
					$("#star_sleep").addClass('star one');
					$("#starbox").attr("title","睡眠质量中等!");
				}else if(totalquality>61 && totalquality<85){
					$("#star_sleep").addClass('star two');
					$("#starbox").attr("title","睡眠质量良好!");
				}else if(totalquality>86 && totalquality<100){
					$("#star_sleep").addClass('star three');
					$("#starbox").attr("title","睡眠质量非常好!");
				}
			}
			
			
			
		},'json');*/
}

function subStr(str){
	if(str.indexOf(".")>0){
		str = str.substring(0, str.indexOf(".")+2);
		if(str == "0.0"){
			str = "0";
		}
	}
	return str;
}


var stepsTotal = 0, speedTotal = 0, calTotal = 0, distanceTotal = 0, heartRateTotal = 0;
initLoad = function(results){
	stepsTotal = 0, speedTotal = 0, calTotal = 0, distanceTotal = 0;
	var xArray = [], stepsArray = [], speedArray = [], calArray = [], distArray = [];
	var speedcount = 0;
	$.each(results,function(i,data){
		xArray.push([data.endTime]);
		stepsArray.push([data.steps]);
		speedArray.push([data.speed]);
		calArray.push([data.cal]);
		distArray.push([data.dist]);
		stepsTotal+=data.steps;
		speedTotal+=data.speed;
		calTotal+=data.cal;
		distanceTotal+=data.dist;
		if(data.speed != 0)
			speedcount++;
	})
	
	stepsTotal = subStr(stepsTotal+"");
	speedTotal = subStr(speedTotal>"0"?speedTotal+"":"0");
	distanceTotal = subStr(distanceTotal+"");
	calTotal = subStr(calTotal+"");
	
	//层的显示值
	$("#bs").text(stepsTotal);
	$("#jl").text(distanceTotal);
	$("#sd").text(speedTotal);
	$("#kll").text(calTotal);
	
	if(results.length>0){
		if(speedcount == 0){
			speedTotal = 0;
		}else{
			speedTotal = Math.round(speedTotal/speedcount);
		}
		if(stepsArray.length > 0 && stepsTotal > 0){
			$('#stepsLog').highcharts({
		        chart: {
		            type: 'column',
		            marginLeft:0,
		//            marginRight:15,
		//            spacingRight:0,
		            height: 210,
		            width: 850
		        },
		        title: {
		            text: ''
		        },
		        subtitle: {
		            text: ''
		        },
		        xAxis: {
		            categories: xArray
		        },
		        yAxis: {
		            min: 0,
		            title: {
		                text: ''
		            }
		        },
		        tooltip: {
		            headerFormat: '<span style="font-size:12px">{point.key} 时</span><table>',
		            pointFormat: '<tr><td style="padding:0"><b>{point.y} 步</b></td></tr>',
		            footerFormat: '</table>',
		            shared: true,
		            useHTML: true
		        },
		        plotOptions: {
		            column: {
		                pointPadding: 0.2,
		                borderWidth: 0
		            }
		        },
		        series: [{
		            data: stepsArray
		
		        }],
		        credits: {
					enabled: false
				},
				legend: {
					enabled: false
				}
		    });
		}else{
			$('#stepsLog').html("");
		}
		if(speedArray.length > 0 && speedTotal > 0){
			$('#speedLog').highcharts({
		        chart: {
		            type: 'column',
		            marginLeft:0,
		//            marginRight:15,
		//            spacingRight:0,
		            height: 210,
		            width: 850
		        },
		        title: {
		            text: ''
		        },
		        subtitle: {
		            text: ''
		        },
		        xAxis: {
		            categories: xArray
		        },
		        yAxis: {
		            min: 0,
		            title: {
		                text: ''
		            }
		        },
		        tooltip: {
		            headerFormat: '<span style="font-size:12px">{point.key} 时</span><table>',
		            pointFormat: '<tr><td style="padding:0"><b>{point.y} km/h</b></td></tr>',
		            footerFormat: '</table>',
		            shared: true,
		            useHTML: true
		        },
		        plotOptions: {
		            column: {
		                pointPadding: 0.2,
		                borderWidth: 0
		            }
		        },
		        series: [{
		            data: speedArray
		
		        }],
		        credits: {
					enabled: false
				},
				legend: {
					enabled: false
				}
		    });
		}else{
			$('#speedLog').html("");
		}
		
		if(distArray.length > 0 && distanceTotal > 0){
			$('#distanceLog').highcharts({
		        chart: {
		            type: 'column',
		            marginLeft:0,
		//            marginRight:15,
		//            spacingRight:0,
		            height: 210,
		            width: 850
		        },
		        title: {
		            text: ''
		        },
		        subtitle: {
		            text: ''
		        },
		        xAxis: {
		            categories: xArray
		        },
		        yAxis: {
		            min: 0,
		            title: {
		                text: ''
		            }
		        },
		        tooltip: {
		            headerFormat: '<span style="font-size:12px">{point.key} 时</span><table>',
		            pointFormat: '<tr><td style="padding:0"><b>{point.y} m</b></td></tr>',
		            footerFormat: '</table>',
		            shared: true,
		            useHTML: true
		        },
		        plotOptions: {
		            column: {
		                pointPadding: 0.2,
		                borderWidth: 0
		            }
		        },
		        series: [{
		            data: distArray
		
		        }],
		        credits: {
					enabled: false
				},
				legend: {
					enabled: false
				}
		    });
		}else{
			$('#distanceLog').html("");
		}
		
		
		if(calArray.length > 0 && calTotal > 0){
			$('#calLog').highcharts({
		        chart: {
		            type: 'column',
		            marginLeft:0,
		//            marginRight:15,
		//            spacingRight:0,
		            height: 210,
		            width: 850
		        },
		        title: {
		            text: ''
		        },
		        subtitle: {
		            text: ''
		        },
		        xAxis: {
		            categories: xArray
		        },
		        yAxis: {
		            min: 0,
		            title: {
		                text: ''
		            }
		        },
		        tooltip: {
		            headerFormat: '<span style="font-size:12px">{point.key} 时</span><table>',
		            pointFormat: '<tr><td style="padding:0"><b>{point.y} 千卡</b></td></tr>',
		            footerFormat: '</table>',
		            shared: true,
		            useHTML: true
		        },
		        plotOptions: {
		            column: {
		                pointPadding: 0.2,
		                borderWidth: 0
		            }
		        },
		        series: [{
		            data: calArray
		
		        }],
		        credits: {
					enabled: false
				},
				legend: {
					enabled: false
				}
		    });
		}else{
			$('#calLog').html("");
		}
		
	}else{
		$('#speedLog').html("");
		$('#stepsLog').html("");
		$('#calLog').html("");
		$('#distanceLog').html("");
		
	}
}

initLoadHearRate = function(results){
	heartRateTotal = 0;
	var xArray = [], heartRateArray = [];
	var count = 0;
	$.each(results,function(i,data){
//		xArray.push([data.setupTime]);
		xArray.push([data.endTime]);
		heartRateArray.push([data.avgRate]);
		heartRateTotal+=data.avgRate;
		if(data.avgRate != 0)
			count++;
//		console.info(count)
//		console.info(data.avgRate)
	})
	if(results.length>0){
		if(count == 0){
			heartRateTotal = 0;
		}else{
			heartRateTotal = Math.round(heartRateTotal/count);
		}
		
		if(heartRateArray.length > 0 && heartRateTotal>0){
			$('#heartRateLog').highcharts({
		        chart: {
		            type: 'column',
		            marginLeft:0,
		//            marginRight:15,
		//            spacingRight:0,
		            height: 210,
		            width: 850
		        },
		        title: {
		            text: ''
		        },
		        subtitle: {
		            text: ''
		        },
		        xAxis: {
		            categories: xArray
		        },
		        yAxis: {
		            min: 0,
		            title: {
		                text: ''
		            }
		        },
		        tooltip: {
		            headerFormat: '<span style="font-size:12px">{point.key} 时</span><table>',
		            pointFormat: '<tr><td style="padding:0"><b>{point.y} b/min</b></td></tr>',
		            footerFormat: '</table>',
		            shared: true,
		            useHTML: true
		        },
		        plotOptions: {
		            column: {
		                pointPadding: 0.2,
		                borderWidth: 0
		            }
		        },
		        series: [{
		            data: heartRateArray
		
		        }],
		        credits: {
					enabled: false
				},
				legend: {
					enabled: false
				}
		    });
		}
	}else{
		$('#heartRateLog').html("");
	}
	
	$("#xl").text(heartRateTotal);
}

showDiv = function(myDiv,myA){
	$("#"+myDiv).attr("style","").attr("class","chart");
	$("#"+myA).attr("class","cuurent");
	$.each($(".box-overview .chart"),function(i,e){
		if(myDiv!=$(this).attr("id"))
			$(this).attr("style","display:none;").removeAttr("class","chart");
	})
	$.each($(".box-overview .head a"),function(i,e){
		if(myA!=$(this).attr("id"))
			$(this).attr("class","");
	})
}

avgValue = function(steps){
	if(steps<=0)
		return "0%";
	if(0<steps&&steps<=199)
		return "1%";
	if(200<=steps&&steps<299)
		return "2%";
	if(300<=steps&&steps<399)
		return "3%";
	if(400<=steps&&steps<499)
		return "4%";
	if(500<=steps&&steps<599)
		return "5%";
	if(600<=steps&&steps<699)
		return "6%";
	if(700<=steps&&steps<799)
		return "7%";
	if(800<=steps&&steps<899)
		return "8%";
	if(900<=steps&&steps<999)
		return "9%";
	if(1000<=steps&&steps<1099)
		return "10%";
	if(1100<=steps&&steps<1199)
		return "11%";
	if(1200<=steps&&steps<1299)
		return "12%";
	if(1300<=steps&&steps<1399)
		return "13%";
	if(1400<=steps&&steps<1499)
		return "14%";
	if(1500<=steps&&steps<1599)
		return "15%";
	if(1600<=steps&&steps<1699)
		return "16%";
	if(1700<=steps&&steps<1799)
		return "17%";
	if(1800<=steps&&steps<1899)
		return "18%";
	if(1900<=steps&&steps<1999)
		return "19%";
	if(2000<=steps&&steps<2099)
		return "20%";
	if(2100<=steps&&steps<2199)
		return "21%";
	if(2200<=steps&&steps<2299)
		return "22%";
	if(2300<=steps&&steps<2399)
		return "23%";
	if(2400<=steps&&steps<2499)
		return "24%";
	if(2500<=steps&&steps<2599)
		return "25%";
	if(2600<=steps&&steps<2699)
		return "26%";
	if(2700<=steps&&steps<2799)
		return "27%";
	if(2800<=steps&&steps<2899)
		return "28%";
	if(2900<=steps&&steps<2999)
		return "29%";
	if(3000<=steps&&steps<3099)
		return "30%";
	if(3100<=steps&&steps<3199)
		return "31%";
	if(3200<=steps&&steps<3299)
		return "32%";
	if(3300<=steps&&steps<3399)
		return "33%";
	if(3400<=steps&&steps<3499)
		return "34%";
	if(3500<=steps&&steps<3599)
		return "35%";
	if(3600<=steps&&steps<3699)
		return "36%";
	if(3700<=steps&&steps<3799)
		return "37%";
	if(3800<=steps&&steps<3899)
		return "38%";
	if(390<=steps&&steps<3999)
		return "39%";
	if(4000<=steps&&steps<4099)
		return "40%";
	if(4100<=steps&&steps<4199)
		return "41%";
	if(4200<=steps&&steps<4299)
		return "42%";
	if(4300<=steps&&steps<4399)
		return "43%";
	if(4400<=steps&&steps<4499)
		return "44%";
	if(4500<=steps&&steps<4599)
		return "45%";
	if(4600<=steps&&steps<4699)
		return "46%";
	if(4700<=steps&&steps<4799)
		return "47%";
	if(4800<=steps&&steps<4899)
		return "48%";
	if(4900<=steps&&steps<4999)
		return "49%";
	if(5000<=steps&&steps<5299)
		return "50%";
	if(5300<=steps&&steps<5599)
		return "51%";
	if(5600<=steps&&steps<5899)
		return "52%";
	if(5900<=steps&&steps<6199)
		return "53%";
	if(6200<=steps&&steps<6499)
		return "54%";
	if(6500<=steps&&steps<6799)
		return "55%";
	if(6800<=steps&&steps<7099)
		return "56%";
	if(7100<=steps&&steps<7399)
		return "57%";
	if(7400<=steps&&steps<7699)
		return "58%";
	if(7700<=steps&&steps<7999)
		return "59%";
	if(8000<=steps&&steps<8499)
		return "60%";
	if(8500<=steps&&steps<8999)
		return "61%";
	if(9000<=steps&&steps<9499)
		return "62%";
	if(9500<=steps&&steps<9999)
		return "63%";
	if(10000<=steps&&steps<10499)
		return "64%";
	if(10500<=steps&&steps<10999)
		return "65%";
	if(11000<=steps&&steps<11499)
		return "66%";
	if(11500<=steps&&steps<11999)
		return "67%";
	if(12000<=steps&&steps<12499)
		return "68%";
	if(12500<=steps&&steps<12999)
		return "69%";
	if(13000<=steps&&steps<13699)
		return "70%";
	if(13700<=steps&&steps<14399)
		return "71%";
	if(14400<=steps&&steps<15099)
		return "72%";
	if(15100<=steps&&steps<15799)
		return "73%";
	if(15800<=steps&&steps<16499)
		return "74%";
	if(16500<=steps&&steps<17199)
		return "75%";
	if(17200<=steps&&steps<17899)
		return "76%";
	if(17900<=steps&&steps<18599)
		return "77%";
	if(18600<=steps&&steps<19299)
		return "78%";
	if(19300 <=steps&&steps<19999)
		return "79%";
	if(20000<=steps&&steps<20899)
		return "80%";
	if(20900<=steps&&steps<21799)
		return "81%";
	if(21800<=steps&&steps<22699)
		return "82%";
	if(22700<=steps&&steps<23599)
		return "83%";
	if(23600<=steps&&steps<24499)
		return "84%";
	if(24500<=steps&&steps<25399)
		return "85%";
	if(25400<=steps&&steps<26299)
		return "86%";
	if(26300<=steps&&steps<27199)
		return "87%";
	if(27200<=steps&&steps<28099)
		return "88%";
	if(28100<=steps&&steps<28999)
		return "89%";
	if(29000<=steps&&steps<29899)
		return "90%";
	if(31000<=steps&&steps<33999)
		return "91%";
	if(34000<=steps&&steps<38999)
		return "92%";
	if(39000<=steps&&steps<44999)
		return "93%";
	if(45000<=steps&&steps<51999)
		return "94%";
	if(52000<=steps&&steps<59999)
		return "95%";
	if(60000<=steps&&steps<68999)
		return "96%";
	if(69000<=steps&&steps<78999)
		return "97%";
	if(79000<=steps&&steps<89999)
		return "98%";
	if(90000<=steps&&steps<109999)
		return "99%";
	if(110000<=steps)
		return "100%";
}




var a,b,c,d,e;
var load = function(stepsTotal,speedTotal,calTotal,distanceTotal,heartRateTotal){
	stepsTotal = subStr(stepsTotal+"");
	speedTotal = subStr(speedTotal>"0"?speedTotal+"":"0");
	heartRateTotal = subStr(heartRateTotal>"0"?heartRateTotal+"":"0");
	distanceTotal = subStr(distanceTotal+"");
	calTotal = subStr(calTotal+"");
	
	a = new JustGage({
	    id: "stepCount", 
	    value: stepsTotal, 
	    min: 0,
	    max: 10000,
	    title: "步 数",
	    showMinMax: false,
		shadowOpacity: 1,
		shadowSize: 0,
		shadowVerticalOffset: 10
	  });
	b = new JustGage({
	    id: "speed", 
	    value: speedTotal, 
	    min: 0,
	    max: 20,
	    title: "速 度",
	    showMinMax: false,
		shadowOpacity: 1,
		shadowSize: 0,
		shadowVerticalOffset: 10
	  });
	c = new JustGage({
	    id: "heartRate", 
	    value: heartRateTotal, 
	    min: 0,
	    max: 200,
	    title: "心率",
	    showMinMax: false,
		shadowOpacity: 1,
		shadowSize: 0,
		shadowVerticalOffset: 10
	  });
	d = new JustGage({
	    id: "calories", 
	    value: calTotal, 
	    min: 0,
	    max: 100,
	    title: "卡路里",
	    showMinMax: false,
		shadowOpacity: 1,
		shadowSize: 0,
		shadowVerticalOffset: 10
	  });
	e = new JustGage({
	    id: "distance", 
	    value: distanceTotal,
	    min: 0,
	    max: 10*1000,
	    title: "距 离",
	    showMinMax: false,
		startAnimationTime: 2000,
		startAnimationType: "&gt;",
		refreshAnimationTime: 1000,
		refreshAnimationType: "bounce",
		shadowOpacity: 1,
		shadowSize: 0,
		shadowVerticalOffset: 10
	  });
}
/*点击日志分析  直接查询加载对应时间的chart、表格数据*/
function logAnalysis(){
	var currentTime = $("#searchDate").val();
//	var startTime = currentTime + " 00:00:00";
//	var endTime = currentTime + " 23:59:59";
	var url = cxtPath+'/user/sport/log?time='+currentTime;
	window.location.href = url; 
} 

